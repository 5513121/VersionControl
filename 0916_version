import net.sf.json.JSONObject;

import java.awt.*;
import java.awt.event.*;
import java.net.URI;
import java.net.URISyntaxException;
import javax.swing.*;
/*
 * Created by JFormDesigner on Sun Oct 08 15:50:16 CST 2023
 */


/**
 * @author lWX1091923
 */
public class MyJframe extends JFrame {
    public MyJframe() {
        initComponents();
    }

    private void labelUrlOpenMouseMoved(MouseEvent e) {
        // TODO add your code here
        //鼠标移动到浏览器图标  显示悬浮字体


    }

    private void labelUrlOpenMouseClicked(MouseEvent e) {
        // TODO add your code here
        //浏览器图标点击进入CMC版本归档地址
        String versionNum = textFieldVersionNum.getText();

        String versionNumId="";
        String cmcUri="https://cbg.huawei.com/#/group/ipd/VersionDetailInfo?id=482000845434880"+versionNumId;

        String urlprame = "http://gdt.cbg.huawei.com/cmo/cmcInfo/getCmcPathInfo?version=" + versionNum;

        String post = HttpURLConnectionHelper.sendRequest(urlprame, "GET");
        String result = null;

        try {
            JSONObject jsonObject = JSONObject.fromObject(post);
            Object result1 = jsonObject.get("result");
            Object packageType = JSONObject.fromObject(result1).get("packageType");


            if ("BaseSoftware".equals(packageType)) {
                Object baseId = JSONObject.fromObject(result1).get("baseId");
                versionNumId=(String)baseId;
            }





            Desktop desktop = Desktop.getDesktop();
            try {
                URI uri = new URI();
            } catch (Exception ex) {
                throw new RuntimeException(ex);
            }


        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }

    private void initComponents() {
        // JFormDesigner - Component initialization - DO NOT MODIFY  //GEN-BEGIN:initComponents  @formatter:off
        panel1 = new JPanel();
        textFieldVersionNum = new JTextField();
        label1 = new JLabel();
        buttonGet = new JButton();
        labelUrlOpen = new JLabel();

        //======== this ========
        setBackground(new Color(0x00a64b));
        setTitle("CMC\u7248\u672c\u4fe1\u606f\u83b7\u53d6");
        setVisible(true);
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        Container contentPane = getContentPane();
        contentPane.setLayout(null);

        //======== panel1 ========
        {
            panel1.setBackground(new Color(0xf0f0f0));
            panel1.setForeground(Color.black);
            panel1.setLayout(null);

            //---- textFieldVersionNum ----
            textFieldVersionNum.setBackground(Color.white);
            textFieldVersionNum.setForeground(Color.red);
            panel1.add(textFieldVersionNum);
            textFieldVersionNum.setBounds(385, 10, 285, 35);

            //---- label1 ----
            label1.setText("\u7248\u672c\u53f7");
            label1.setBackground(Color.white);
            label1.setForeground(Color.black);
            label1.setFont(new Font("Microsoft YaHei UI", Font.BOLD, 12));
            panel1.add(label1);
            label1.setBounds(335, 10, 45, 30);

            //---- buttonGet ----
            buttonGet.setText("\u83b7\u53d6");
            buttonGet.setForeground(Color.black);
            buttonGet.setBackground(Color.lightGray);
            panel1.add(buttonGet);
            buttonGet.setBounds(675, 15, 65, buttonGet.getPreferredSize().height);

            //---- labelUrlOpen ----
            labelUrlOpen.setIcon(new ImageIcon(getClass().getResource("/browser.png")));
            labelUrlOpen.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
            labelUrlOpen.addMouseMotionListener(new MouseMotionAdapter() {
                @Override
                public void mouseMoved(MouseEvent e) {
                    labelUrlOpenMouseMoved(e);
                }
            });
            labelUrlOpen.addMouseListener(new MouseAdapter() {
                @Override
                public void mouseClicked(MouseEvent e) {
                    labelUrlOpenMouseClicked(e);
                }
            });
            panel1.add(labelUrlOpen);
            labelUrlOpen.setBounds(745, 18, 25, 25);

            {
                // compute preferred size
                Dimension preferredSize = new Dimension();
                for (int i = 0; i < panel1.getComponentCount(); i++) {
                    Rectangle bounds = panel1.getComponent(i).getBounds();
                    preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
                    preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
                }
                Insets insets = panel1.getInsets();
                preferredSize.width += insets.right;
                preferredSize.height += insets.bottom;
                panel1.setMinimumSize(preferredSize);
                panel1.setPreferredSize(preferredSize);
            }
        }
        contentPane.add(panel1);
        panel1.setBounds(-5, -5, 1080, 745);

        {
            // compute preferred size
            Dimension preferredSize = new Dimension();
            for (int i = 0; i < contentPane.getComponentCount(); i++) {
                Rectangle bounds = contentPane.getComponent(i).getBounds();
                preferredSize.width = Math.max(bounds.x + bounds.width, preferredSize.width);
                preferredSize.height = Math.max(bounds.y + bounds.height, preferredSize.height);
            }
            Insets insets = contentPane.getInsets();
            preferredSize.width += insets.right;
            preferredSize.height += insets.bottom;
            contentPane.setMinimumSize(preferredSize);
            contentPane.setPreferredSize(preferredSize);
        }
        pack();
        setLocationRelativeTo(getOwner());
        // JFormDesigner - End of component initialization  //GEN-END:initComponents  @formatter:on
    }

    // JFormDesigner - Variables declaration - DO NOT MODIFY  //GEN-BEGIN:variables  @formatter:off
    private JPanel panel1;
    private JTextField textFieldVersionNum;
    private JLabel label1;
    private JButton buttonGet;
    private JLabel labelUrlOpen;
    // JFormDesigner - End of variables declaration  //GEN-END:variables  @formatter:on
}









































































import com.sun.javafx.logging.Logger;
import com.sun.org.apache.bcel.internal.generic.RETURN;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpRetryException;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;

public class HttpURLConnectionHelper{
    public static String sendRequest(String urlParam,String requestType){
        HttpURLConnection con=null;
        BufferedReader buffer =null;
        StringBuffer resultBuffer=null;

        try {
            URL url = new URL(urlParam);
            con=(HttpURLConnection)url.openConnection();
            System.out.println(con);
            con.setRequestMethod(requestType);
            con.setDoOutput(true);
            con.setDoInput(true);
            con.setUseCaches(false);
            int responseCode = con.getResponseCode();
            if(responseCode ==HttpURLConnection.HTTP_OK){
                InputStream inputStream = con.getInputStream();
                resultBuffer = new StringBuffer();
                String line ;
                buffer=new BufferedReader(new InputStreamReader(inputStream,"UTF-8"));
                while((line= buffer.readLine())!=null){
                    resultBuffer.append(line);
                }
//                System.out.println(resultBuffer.toString());
                return  resultBuffer.toString();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return "";
    }
}
