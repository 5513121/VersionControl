

java用post发json数据
以下是Java中使用POST方法发送JSON数据的几种实现方法：

方法1: 使用java.net包中的HttpURLConnection类

import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.nio.charset.StandardCharsets;
 
public class Main {
    public static void main(String[] args) throws Exception {
        String json = "{\"name\":\"John\", \"age\":30, \"city\":\"New York\"}";
 
        URL url = new URL("https://example.com/api/endpoint");
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("POST");
        connection.setRequestProperty("Content-Type", "application/json; utf-8");
        connection.setRequestProperty("Accept", "application/json");
        connection.setDoOutput(true);
 
        try (OutputStream os = connection.getOutputStream()) {
            byte[] input = json.getBytes(StandardCharsets.UTF_8);
            os.write(input, 0, input.length);
        }
 
        int responseCode = connection.getResponseCode();
        System.out.println("Response Code: " + responseCode);
    }
}
方法2: 使用第三方库如 Apache HttpClient

import org.apache.http.HttpEntity;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.EntityUtils;
 
public class Main {
    public static void main(String[] args) throws Exception {
        String json = "{\"name\":\"John\", \"age\":30, \"city\":\"New York\"}";
 
        CloseableHttpClient httpClient = HttpClients.createDefault();
        HttpPost httpPost = new HttpPost("https://example.com/api/endpoint");
        httpPost.addHeader("Content-Type", "application/json");
        httpPost.addHeader("Accept", "application/json");
        httpPost.setEntity(new StringEntity(json));
 
        try (CloseableHttpResponse response = httpClient.execute(httpPost)) {
            HttpEntity entity = response.getEntity();
            int responseCode = response.getStatusLine().getStatusCode();
            String responseBody = EntityUtils.toString(entity);
 
            System.out.println("Response Code: " + responseCode);
            System.out.println("Response Body: " + responseBody);
        }
    }
}
方法3: 使用第三方库如 OkHttp

import okhttp3.MediaType;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;
 
public class Main {
    public static void main(String[] args) throws Exception {
        String json = "{\"name\":\"John\", \"age\":30, \"city\":\"New York\"}";
 
        OkHttpClient client = new OkHttpClient();
 
        MediaType mediaType = MediaType.parse("application/json");
        RequestBody body = RequestBody.create(json, mediaType);
        Request request = new Request.Builder()
                .url("https://example.com/api/endpoint")
                .post(body)
                .build();
 
        try (Response response = client.newCall(request).execute()) {
            int responseCode = response.code();
            String responseBody = response.body().string();
 
            System.out.println("Response Code: " + responseCode);
            System.out.println("Response Body: " + responseBody);
        }
    }
}