从xml文件中读取变量， 增加了读取流处理 使用SAXReader的read(File file)方法时，如果xml文件异常会导致文件被服务器占用不能移动文件，建议不使用read(File
* file)方法而使用read(FileInputStream fis)等流的方式读取文件，
* 异常时关闭流，这样就不会造成流未关闭，文件被锁的现象了。(在服务器中运行时会锁住文件，main方法却不会)。

    String configPath = "D:\\cmc_upload_download\\" + versionNumber + "\\BiddingDoc\\config\\base_package_config\\package_define.xml";
		
        FileInputStream fileInputStream = null;
        try {
            //判断是否有package_define.xml文件
            if (!new File(configPath).exists()) {
                JOptionPane.showMessageDialog(this, "请检查文件是否下载成功! " + versionNumber + " 可能为空包!", "提示", JOptionPane.DEFAULT_OPTION);
                return;
            }
            fileInputStream = new FileInputStream(configPath);
        } catch (FileNotFoundException e1) {
            // TODO 自动生成的 catch 块
            e1.printStackTrace();
        }

        SAXReader saxReader = new SAXReader();
        try {
            Document read = saxReader.read(fileInputStream);	//用FileInputStream类读取，避免xml文件占用
            Element rootElement = read.getRootElement();    //build_desc标签

            packageNname = rootElement.attributeValue("package_name");
            textArea4.setText(packageNname);

            configRepositoryValue = rootElement.attributeValue("config_repository");
            configBranchValue = rootElement.attributeValue("config_branch");
//            System.out.println(configRepositoryValue+"\n"+configBranchValue);
            textField4.setText(configRepositoryValue);
            textField5.setText(configBranchValue);


            //版本管控获取
            String versionControlRepository = rootElement.element("input").element("tools").element("package_res").element("repository").getText();
            textField1.setText(versionControlRepository);

            String versionControlBranch = rootElement.element("input").element("tools").element("package_res").element("branch").getText();
            textField2.setText(versionControlBranch);

            String versionControlTag = rootElement.element("input").element("tools").element("package_res").element("tag").getText();
            textField3.setText(versionControlTag);


        } catch (
                DocumentException e1) {
            // TODO 自动生成的 catch 块
            e1.printStackTrace();
        } finally {
            try {
                fileInputStream.close();
            } catch (IOException ex) {
                throw new RuntimeException(ex);
            }
        }
